{"index":[{"sig":"FigureData","name":"FigureData","kind":4,"flags":1,"href":"index--FigureData.html","children":[{"sig":"baseline: string","name":"baseline","kind":10,"flags":4,"href":"index--FigureData.html#s54"},{"sig":"domId: string","name":"domId","kind":10,"flags":4,"href":"index--FigureData.html#s55"},{"sig":"html: string","name":"html","kind":10,"flags":4,"href":"index--FigureData.html#s53"},{"sig":"name: string","name":"name","kind":10,"flags":4,"href":"index--FigureData.html#s52"},{"sig":"type: 'figure'","name":"type","kind":10,"flags":4,"href":"index--FigureData.html#s51"}]},{"sig":"Result","name":"Result","kind":4,"flags":1,"href":"index--Result.html","children":[{"sig":"data: FigureData","name":"data","kind":10,"flags":4,"href":"index--Result.html#s59"},{"sig":"message: string","name":"message","kind":10,"flags":4,"href":"index--Result.html#s58"},{"sig":"stack: any","name":"stack","kind":10,"flags":4,"href":"index--Result.html#s60"},{"sig":"success: boolean","name":"success","kind":10,"flags":4,"href":"index--Result.html#s57"}]},{"sig":"Spy<EventT>","name":"Spy","kind":4,"flags":0,"href":"index--Spy.html","children":[{"sig":"destroy(): void","name":"destroy","kind":11,"flags":0,"href":"index--Spy.html#s31"},{"sig":"lastEvent: EventT","name":"lastEvent","kind":10,"flags":4,"href":"index--Spy.html#s30"},{"sig":"then(resolve: (ev: EventT) => void, reject: (e: any) => void): Promise<EventT>","name":"then","kind":11,"flags":0,"href":"index--Spy.html#s32"}]},{"sig":"SpyFn<ParametersT, ResultT>","name":"SpyFn","kind":4,"flags":0,"href":"index--SpyFn.html","children":[{"sig":"arguments: ParametersT","name":"arguments","kind":10,"flags":4,"href":"index--SpyFn.html#s43"},{"sig":"called: number","name":"called","kind":10,"flags":4,"href":"index--SpyFn.html#s42"},{"sig":"result: ResultT","name":"result","kind":10,"flags":4,"href":"index--SpyFn.html#s44"}]},{"sig":"SpyProp<T>","name":"SpyProp","kind":4,"flags":0,"href":"index--SpyProp.html","children":[{"sig":"getCount: number","name":"getCount","kind":10,"flags":4,"href":"index--SpyProp.html#s48"},{"sig":"setCount: number","name":"setCount","kind":10,"flags":4,"href":"index--SpyProp.html#s47"},{"sig":"value: T","name":"value","kind":10,"flags":4,"href":"index--SpyProp.html#s49"}]},{"sig":"Test","name":"Test","kind":8,"flags":1,"href":"index--Test.html","children":[{"sig":"addTest(test: Test): void","name":"addTest","kind":11,"flags":4,"href":"index--Test.html#s169"},{"sig":"completed: boolean = false","name":"completed","kind":10,"flags":4,"href":"index--Test.html#s153"},{"sig":"constructor(nameOrConfig: string | TestConfig, testFn: TestFn): Test","name":"constructor","kind":14,"flags":0,"href":"index--Test.html#s155"},{"sig":"doTimeout(promise: Promise<any>, time: number): Promise<void>","name":"doTimeout","kind":11,"flags":4,"href":"index--Test.html#s166"},{"sig":"domContainer: Element","name":"domContainer","kind":10,"flags":4,"href":"index--Test.html#s151"},{"sig":"emit(type: EventType): Promise<void>","name":"emit","kind":11,"flags":260,"href":"index--Test.html#s171"},{"sig":"events: Subject<TestEvent, any> = subject<TestEvent>()","name":"events","kind":10,"flags":4,"href":"index--Test.html#s152"},{"sig":"id: number = lastTestId++","name":"id","kind":10,"flags":68,"href":"index--Test.html#s154"},{"sig":"name: string","name":"name","kind":10,"flags":4,"href":"index--Test.html#s145"},{"sig":"onEvent(id: EventType, fn: () => Promise<any> | void): void","name":"onEvent","kind":11,"flags":4,"href":"index--Test.html#s158"},{"sig":"only: Test[] = []","name":"only","kind":10,"flags":4,"href":"index--Test.html#s149"},{"sig":"promise: Promise<any>","name":"promise","kind":10,"flags":4,"href":"index--Test.html#s146"},{"sig":"push(result: Result): void","name":"push","kind":11,"flags":4,"href":"index--Test.html#s162"},{"sig":"pushError(e: Error | string): void","name":"pushError","kind":11,"flags":4,"href":"index--Test.html#s164"},{"sig":"results: Result[] = []","name":"results","kind":10,"flags":4,"href":"index--Test.html#s147"},{"sig":"run(): Promise<Result[] extends Result>","name":"run","kind":11,"flags":260,"href":"index--Test.html#s173"},{"sig":"testFn: TestFn","name":"testFn","kind":10,"flags":4,"href":"index--Test.html#s157"},{"sig":"tests: Test[] = []","name":"tests","kind":10,"flags":4,"href":"index--Test.html#s148"},{"sig":"timeout: number = 5 * 1000","name":"timeout","kind":10,"flags":4,"href":"index--Test.html#s150"},{"sig":"toJSON(): any","name":"toJSON","kind":11,"flags":4,"href":"index--Test.html#s174"}]},{"sig":"TestApi","name":"TestApi","kind":8,"flags":1,"href":"index--TestApi.html","children":[{"sig":"$test: Test","name":"$test","kind":10,"flags":8,"href":"index--TestApi.html#s69"},{"sig":"addSpec(test: Test): void","name":"addSpec","kind":11,"flags":4,"href":"index--TestApi.html#s92"},{"sig":"afterAll(fn: () => Promise<any> | void): void","name":"afterAll","kind":11,"flags":4,"href":"index--TestApi.html#s72"},{"sig":"assert(condition: any, message: string): ","name":"assert","kind":11,"flags":4,"href":"index--TestApi.html#s79"},{"sig":"async(): () => void","name":"async","kind":11,"flags":4,"href":"index--TestApi.html#s99"},{"sig":"constructor($test: Test): TestApi","name":"constructor","kind":14,"flags":0,"href":"index--TestApi.html#s68"},{"sig":"dom(): HTMLElement","name":"dom","kind":12,"flags":4,"docs":{"content":[{"value":"Returns a connected dom element. Cleaned up after test completion."}]},"href":"index--TestApi.html#s71"},{"sig":"element<K in keyof HTMLElementTagNameMap>(tagName: K): HTMLElementTagNameMap[K]","name":"element","kind":11,"flags":16388,"docs":{"content":[{"value":"Returns a connected element"}]},"href":"index--TestApi.html#s128"},{"sig":"element(tagName: string): HTMLElement","name":"element","kind":11,"flags":16388,"href":"index--TestApi.html#s131"},{"sig":"element(tagName: string): HTMLElement","name":"element","kind":11,"flags":4,"href":"index--TestApi.html#s133"},{"sig":"equal<T>(a: T, b: T, desc?: string): void","name":"equal","kind":11,"flags":4,"href":"index--TestApi.html#s82"},{"sig":"equalValues<T>(a: T, b: T, desc?: string): void","name":"equalValues","kind":11,"flags":4,"href":"index--TestApi.html#s87"},{"sig":"figure(name: string, html: Node | string): void","name":"figure","kind":11,"flags":4,"href":"index--TestApi.html#s142"},{"sig":"id(): number","name":"id","kind":12,"flags":4,"href":"index--TestApi.html#s67"},{"sig":"measure(measurements: Measurements): void","name":"measure","kind":11,"flags":4,"href":"index--TestApi.html#s101"},{"sig":"mock<T, K in keyof FunctionsOf<T>>(object: T, method: K, fn: T[K]): T[K]","name":"mock","kind":11,"flags":4,"href":"index--TestApi.html#s112"},{"sig":"ok<T>(condition: T, message: string): void","name":"ok","kind":11,"flags":4,"href":"index--TestApi.html#s75"},{"sig":"ran(n: number): void","name":"ran","kind":11,"flags":4,"href":"index--TestApi.html#s97"},{"sig":"should(name: string, testFn: TestFn): void","name":"should","kind":11,"flags":4,"href":"index--TestApi.html#s106"},{"sig":"spyFn<T, K in keyof FunctionsOf<T>>(object: T, method: K): Spy<SpyFn<Parameters<FunctionsOf<T>[K]>, T[K]>>","name":"spyFn","kind":11,"flags":4,"href":"index--TestApi.html#s118"},{"sig":"spyProp<T, K in keyof T>(object: T, prop: K): Spy<SpyProp<T[K]>>","name":"spyProp","kind":11,"flags":4,"href":"index--TestApi.html#s123"},{"sig":"test(name: string, testFn: TestFn): void","name":"test","kind":11,"flags":4,"href":"index--TestApi.html#s109"},{"sig":"testEvent<T in HTMLElement>(el: T, name: string, trigger: (el: T) => void): void","name":"testEvent","kind":11,"flags":4,"href":"index--TestApi.html#s135"},{"sig":"testOnly(name: string, testFn: TestFn): void","name":"testOnly","kind":11,"flags":4,"docs":{"content":[{"value":"You can use testOnly instead of test to specify which tests are the only ones\nyou want to run in that test file."}]},"href":"index--TestApi.html#s103"},{"sig":"throws(fn: () => any): void","name":"throws","kind":11,"flags":4,"href":"index--TestApi.html#s94"}]},{"sig":"TestConfig","name":"TestConfig","kind":4,"flags":0,"href":"index--TestConfig.html","children":[{"sig":"name: string","name":"name","kind":10,"flags":4,"href":"index--TestConfig.html#s62"}]}]}