{"index":[{"sig":"BehaviorSubject<T> extends Subject<T>","name":"BehaviorSubject","kind":8,"flags":1,"docs":{"content":[{"value":"A variant of Subject that requires an initial value and emits its current value whenever it is subscribed to."},{"tag":"see","value":"be"}]},"href":"index--BehaviorSubject.html","typeKind":33,"type":"extends Subject<T>","children":[{"sig":"constructor(privatecurrentValue: T): BehaviorSubject<T>","name":"constructor","parameters":[{"sig":"currentValue: T","name":"currentValue","kind":10,"flags":8,"href":"index--BehaviorSubject.html#s216","typeKind":3,"type":"T"}],"kind":14,"href":"index--BehaviorSubject.html#s215","typeKind":8,"type":"BehaviorSubject"},{"sig":"currentValue: T","name":"currentValue","kind":10,"flags":8,"href":"index--BehaviorSubject.html#s216","typeKind":3,"type":"T"},{"sig":"next(val: T): void","name":"next","parameters":[{"sig":"val: T","name":"val","kind":9,"href":"#s221","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--BehaviorSubject.html#s220","typeKind":32,"type":"void"},{"sig":"onSubscribe(subscription: Subscriber<T>): UnsubscribeFunction","name":"onSubscribe","parameters":[{"sig":"subscription: Subscriber<T>","name":"subscription","kind":9,"href":"#s219","typeKind":8,"type":"Subscriber<T>"}],"kind":11,"flags":20,"href":"index--BehaviorSubject.html#s218","typeKind":2,"type":"UnsubscribeFunction"},{"sig":"value(): T","name":"value","kind":12,"flags":4,"href":"index--BehaviorSubject.html#s217","typeKind":3,"type":"T"}]},{"sig":"CompleteFunction = () => void","name":"CompleteFunction","kind":2,"href":"#s29","typeKind":17,"type":{"sig":"() => void","name":"","kind":17,"href":"#s30","typeKind":32,"type":"void"}},{"sig":"ConcatResult<R extends Observable<unknown>[]> = R extends (infer U)[] ? Observable<Merge<U>> : never","name":"ConcatResult","kind":2,"href":"#s247","typeKind":18,"type":"R extends (infer U)[] ? Observable<Merge<U>> : never","resolvedType":"R extends (infer U)[] ? Observable<Merge<U>, &quot;none&quot;> : never"},{"sig":"EmptyError extends Error","name":"EmptyError","kind":8,"flags":1,"href":"index--EmptyError.html","typeKind":33,"type":"extends Error","children":[{"sig":"message: string = 'No elements in sequence'","name":"message","kind":10,"flags":4,"href":"index--EmptyError.html#s288","typeKind":32,"type":"string"}]},{"sig":"EmptyEvent","name":"EmptyEvent","kind":4,"flags":1,"href":"index--EmptyEvent.html","children":[{"sig":"type: 'empty'","name":"type","kind":10,"flags":4,"href":"index--EmptyEvent.html#s632","typeKind":23,"type":"'empty'"}]},{"sig":"ErrorFunction = (err: ObservableError) => void","name":"ErrorFunction","kind":2,"href":"#s24","typeKind":17,"type":{"sig":"(err: ObservableError) => void","name":"","parameters":[{"sig":"err: ObservableError","name":"err","kind":9,"href":"#s26","typeKind":2,"type":"ObservableError"}],"kind":17,"href":"#s25","typeKind":32,"type":"void"},"resolvedType":{"sig":"(err: unknown) => void","name":"","parameters":[{"sig":"err: unknown","name":"err","kind":9,"href":"#s28","typeKind":43,"type":"unknown"}],"kind":17,"href":"#s27","typeKind":32,"type":"void"}},{"sig":"InsertEvent<T, K>","name":"InsertEvent","kind":4,"flags":1,"href":"index--InsertEvent.html","children":[{"sig":"item: T","name":"item","kind":10,"flags":4,"href":"index--InsertEvent.html#s625","typeKind":3,"type":"T"},{"sig":"key: K","name":"key","kind":10,"flags":4,"href":"index--InsertEvent.html#s626","typeKind":3,"type":"K"},{"sig":"type: 'insert'","name":"type","kind":10,"flags":4,"href":"index--InsertEvent.html#s624","typeKind":23,"type":"'insert'"}]},{"sig":"InteropObservable<T>","name":"InteropObservable","kind":4,"flags":1,"href":"index--InteropObservable.html","children":[{"sig":"[observableSymbol]: () => Subscribable<T>","name":"[observableSymbol]","kind":10,"flags":4,"href":"index--InteropObservable.html#s72","typeKind":17,"type":{"sig":"() => Subscribable<T>","name":"","kind":17,"href":"#s73","typeKind":4,"type":"Subscribable<T>"}}]},{"sig":"ListEvent<T, K> = InsertEvent<T, K> | RemoveEvent<K> | EmptyEvent","name":"ListEvent","kind":2,"flags":1,"href":"index--html#s633","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"EmptyEvent: EmptyEvent","name":"EmptyEvent","kind":6,"href":"index--EmptyEvent.html","typeKind":4,"type":"EmptyEvent"},{"sig":"InsertEvent<T, K>: InsertEvent<T, K>","name":"InsertEvent","kind":6,"href":"index--InsertEvent.html","typeKind":4,"type":"InsertEvent<T, K>"},{"sig":"RemoveEvent<K>: RemoveEvent<K>","name":"RemoveEvent","kind":6,"href":"index--RemoveEvent.html","typeKind":4,"type":"RemoveEvent<K>"}]},"resolvedType":{"sig":"","name":"","kind":5,"children":[{"sig":"EmptyEvent","name":"EmptyEvent","kind":6},{"sig":"InsertEvent<T, K>","name":"InsertEvent","kind":6},{"sig":"RemoveEvent<K>","name":"RemoveEvent","kind":6}]}},{"sig":"Merge<T> = T extends Observable<infer U extends U> ? U : never","name":"Merge","kind":2,"href":"#s41","typeKind":18,"type":"T extends Observable<infer U extends U> ? U : never","resolvedType":"T extends Observable<infer U extends U, &quot;none&quot;> ? U : never"},{"sig":"MergeResult<R extends Observable<unknown>[]> = R extends (infer U)[] ? Observable<Merge<U>> : never","name":"MergeResult","kind":2,"href":"#s409","typeKind":18,"type":"R extends (infer U)[] ? Observable<Merge<U>> : never","resolvedType":"R extends (infer U)[] ? Observable<Merge<U>, &quot;none&quot;> : never"},{"sig":"NextFunction<T> = (val: T) => void","name":"NextFunction","kind":2,"href":"#s18","typeKind":17,"type":{"sig":"(val: T) => void","name":"","parameters":[{"sig":"val: T","name":"val","kind":9,"href":"#s21","typeKind":3,"type":"T"}],"kind":17,"href":"#s20","typeKind":32,"type":"void"}},{"sig":"NextObserver<T> = NextFunction<T> | Observer<T> | undefined","name":"NextObserver","kind":2,"href":"#s74","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"NextFunction<T>: NextFunction","name":"NextFunction","kind":6,"href":"#s18","typeKind":2,"type":"NextFunction"},{"sig":"Observer<T>: Observer<T>","name":"Observer","kind":6,"href":"index--Observer.html","typeKind":4,"type":"Observer<T>"},{"sig":"undefined","name":"undefined","kind":32}]},"resolvedType":{"sig":"","name":"","kind":5,"children":[{"sig":"NextFunction<T>","name":"NextFunction","kind":6},{"sig":"Observer<T>","name":"Observer","kind":6},{"sig":"undefined","name":"undefined","kind":32}]}},{"sig":"Observable<T, P>","name":"Observable","kind":8,"flags":1,"docs":{"content":[{"value":"A representation of any set of values over any amount of time."}]},"href":"index--Observable.html","children":[{"sig":"[observableSymbol](): Observable","name":"[observableSymbol]","kind":11,"flags":4,"href":"index--Observable.html#s140","typeKind":8,"type":"Observable"},{"sig":"___subscribe: SubscribeFunction<T>","name":"___subscribe","kind":10,"flags":16,"href":"index--Observable.html#s142","typeKind":2,"type":"SubscribeFunction"},{"sig":"catchError<T2 extends T | never>(selector: (err: unknown, source: Observable<T>) => Observable<T2> | void): Observable<T>","name":"catchError","parameters":[{"sig":"selector: (err: unknown, source: Observable<T>) => Observable<T2> | void","name":"selector","kind":9,"href":"#s558","typeKind":17,"type":"(err: unknown, source: Observable<T>) => Observable<T2> | void"}],"kind":11,"flags":4,"href":"index--Observable.html#s556","typeKind":8,"type":"Observable"},{"sig":"constructor(protected ___subscribe: SubscribeFunction<T>): Observable<T, P>","name":"constructor","parameters":[{"sig":"___subscribe: SubscribeFunction<T>","name":"___subscribe","kind":10,"flags":16,"href":"index--Observable.html#s142","typeKind":2,"type":"SubscribeFunction"}],"kind":14,"href":"index--Observable.html#s141","typeKind":8,"type":"Observable"},{"sig":"debounceTime(time?: number, timer?: (delay: number) => Observable<void>): Observable<T>","name":"debounceTime","parameters":[{"sig":"time?: number","name":"time","kind":9,"flags":524288,"href":"#s563","typeKind":32,"type":"number"},{"sig":"timer?: (delay: number) => Observable<void>","name":"timer","kind":9,"flags":524288,"href":"#s564","typeKind":17,"type":"(delay: number) => Observable<void>"}],"kind":11,"flags":4,"href":"index--Observable.html#s562","typeKind":8,"type":"Observable"},{"sig":"distinctUntilChanged(): Observable<T>","name":"distinctUntilChanged","kind":11,"flags":4,"href":"index--Observable.html#s567","typeKind":8,"type":"Observable"},{"sig":"exhaustMap<T2>(project: (value: T) => Observable<T2>): Observable<T2>","name":"exhaustMap","parameters":[{"sig":"project: (value: T) => Observable<T2>","name":"project","kind":9,"href":"#s570","typeKind":17,"type":"(value: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s568","typeKind":8,"type":"Observable"},{"sig":"filter<T2>(fn: (val: T) => boolean): Observable<T2>","name":"filter","parameters":[{"sig":"fn: (val: T) => boolean","name":"fn","kind":9,"href":"#s575","typeKind":17,"type":"(val: T) => boolean"}],"kind":11,"flags":4,"href":"index--Observable.html#s573","typeKind":8,"type":"Observable"},{"sig":"finalize(fn: () => void): Observable<T>","name":"finalize","parameters":[{"sig":"fn: () => void","name":"fn","kind":9,"href":"#s579","typeKind":17,"type":"() => void"}],"kind":11,"flags":4,"href":"index--Observable.html#s578","typeKind":8,"type":"Observable"},{"sig":"first(): Observable<T>","name":"first","kind":11,"flags":4,"href":"index--Observable.html#s581","typeKind":8,"type":"Observable"},{"sig":"ignoreElements(): Observable<never>","name":"ignoreElements","kind":11,"flags":4,"href":"index--Observable.html#s620","typeKind":8,"type":"Observable"},{"sig":"map<T2>(mapFn: (val: T) => T2): Observable<T2>","name":"map","parameters":[{"sig":"mapFn: (val: T) => T2","name":"mapFn","kind":9,"href":"#s584","typeKind":17,"type":"(val: T) => T2"}],"kind":11,"flags":4,"href":"index--Observable.html#s582","typeKind":8,"type":"Observable"},{"sig":"mergeMap<T2>(project: (val: T) => Observable<T2>): Observable<T2>","name":"mergeMap","parameters":[{"sig":"project: (val: T) => Observable<T2>","name":"project","kind":9,"href":"#s589","typeKind":17,"type":"(val: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s587","typeKind":8,"type":"Observable"},{"sig":"pipe<A>(a: Operator<T, A>): Observable<A>","name":"pipe","parameters":[{"sig":"a: Operator<T, A>","name":"a","kind":9,"href":"#s154","typeKind":2,"type":"Operator<T, A>"}],"kind":11,"flags":16388,"href":"index--Observable.html#s152","typeKind":8,"type":"Observable"},{"sig":"pipe<A, B>(a: Operator<T, A>, b: Operator<A, B>): Observable<B>","name":"pipe","parameters":[{"sig":"a: Operator<T, A>","name":"a","kind":9,"href":"#s158","typeKind":2,"type":"Operator<T, A>"},{"sig":"b: Operator<A, B>","name":"b","kind":9,"href":"#s159","typeKind":2,"type":"Operator<A, B>"}],"kind":11,"flags":16388,"href":"index--Observable.html#s155","typeKind":8,"type":"Observable"},{"sig":"pipe<A, B, C>(a: Operator<T, A>, b: Operator<A, B>, c: Operator<B, C>): Observable<C>","name":"pipe","parameters":[{"sig":"a: Operator<T, A>","name":"a","kind":9,"href":"#s164","typeKind":2,"type":"Operator<T, A>"},{"sig":"b: Operator<A, B>","name":"b","kind":9,"href":"#s165","typeKind":2,"type":"Operator<A, B>"},{"sig":"c: Operator<B, C>","name":"c","kind":9,"href":"#s166","typeKind":2,"type":"Operator<B, C>"}],"kind":11,"flags":16388,"href":"index--Observable.html#s160","typeKind":8,"type":"Observable"},{"sig":"pipe<A, B, C, D>(a: Operator<T, A>, b: Operator<A, B>, c: Operator<B, C>, d: Operator<C, D>): Observable<D>","name":"pipe","parameters":[{"sig":"a: Operator<T, A>","name":"a","kind":9,"href":"#s172","typeKind":2,"type":"Operator<T, A>"},{"sig":"b: Operator<A, B>","name":"b","kind":9,"href":"#s173","typeKind":2,"type":"Operator<A, B>"},{"sig":"c: Operator<B, C>","name":"c","kind":9,"href":"#s174","typeKind":2,"type":"Operator<B, C>"},{"sig":"d: Operator<C, D>","name":"d","kind":9,"href":"#s175","typeKind":2,"type":"Operator<C, D>"}],"kind":11,"flags":16388,"href":"index--Observable.html#s167","typeKind":8,"type":"Observable"},{"sig":"pipe<A, B, C, D, E>(a: Operator<T, A>, b: Operator<A, B>, c: Operator<B, C>, d: Operator<C, D>, e: Operator<D, E>): Observable<E>","name":"pipe","parameters":[{"sig":"a: Operator<T, A>","name":"a","kind":9,"href":"#s182","typeKind":2,"type":"Operator<T, A>"},{"sig":"b: Operator<A, B>","name":"b","kind":9,"href":"#s183","typeKind":2,"type":"Operator<A, B>"},{"sig":"c: Operator<B, C>","name":"c","kind":9,"href":"#s184","typeKind":2,"type":"Operator<B, C>"},{"sig":"d: Operator<C, D>","name":"d","kind":9,"href":"#s185","typeKind":2,"type":"Operator<C, D>"},{"sig":"e: Operator<D, E>","name":"e","kind":9,"href":"#s186","typeKind":2,"type":"Operator<D, E>"}],"kind":11,"flags":16388,"href":"index--Observable.html#s176","typeKind":8,"type":"Observable"},{"sig":"pipe(...extra: [Operator<T, unknown>, ...Operator<unknown, unknown>[]]): Observable<unknown>","name":"pipe","parameters":[{"sig":"extra: [Operator<T, unknown>, ...Operator<unknown, unknown>[]]","name":"extra","kind":9,"flags":262144,"href":"#s188","typeKind":29,"type":"[Operator<T, unknown>, ...Operator<unknown, unknown>[]]"}],"kind":11,"flags":4,"docs":{"content":[{"value":"Used to stitch together functional operators into a chain."}]},"href":"index--Observable.html#s187","typeKind":8,"type":"Observable"},{"sig":"publishLast(): Observable<T>","name":"publishLast","kind":11,"flags":4,"href":"index--Observable.html#s592","typeKind":8,"type":"Observable"},{"sig":"reduce<T2>(reduceFn: (acc: T2, val: T, i: number) => T2, seed: T2): Observable<T2>","name":"reduce","parameters":[{"sig":"reduceFn: (acc: T2, val: T, i: number) => T2","name":"reduceFn","kind":9,"href":"#s595","typeKind":17,"type":"(acc: T2, val: T, i: number) => T2"},{"sig":"seed: T2","name":"seed","kind":9,"href":"#s600","typeKind":3,"type":"T2"}],"kind":11,"flags":4,"href":"index--Observable.html#s593","typeKind":8,"type":"Observable"},{"sig":"select<K extends keyof T>(key: K): Observable<T[K]>","name":"select","parameters":[{"sig":"key: K","name":"key","kind":9,"href":"#s603","typeKind":3,"type":"K"}],"kind":11,"flags":4,"href":"index--Observable.html#s601","typeKind":8,"type":"Observable"},{"sig":"share(): Observable<T>","name":"share","kind":11,"flags":4,"href":"index--Observable.html#s604","typeKind":8,"type":"Observable"},{"sig":"subscribe(next?: NextObserver<T>, fwd?: (subs: Subscription) => void): Subscription","name":"subscribe","parameters":[{"sig":"next?: NextObserver<T>","name":"next","kind":9,"flags":524288,"href":"#s190","typeKind":2,"type":"NextObserver<T>"},{"sig":"fwd?: (subs: Subscription) => void","name":"fwd","kind":9,"flags":524288,"href":"#s191","typeKind":17,"type":"(subs: Subscription) => void"}],"kind":11,"flags":4,"docs":{"content":[{"value":"Invokes an execution of an Observable and registers Observer handlers for notifications it will emit."}]},"href":"index--Observable.html#s189","typeKind":4,"type":"Subscription"},{"sig":"switchMap<T2>(project: (val: T) => Observable<T2>): Observable<T2>","name":"switchMap","parameters":[{"sig":"project: (val: T) => Observable<T2>","name":"project","kind":9,"href":"#s607","typeKind":17,"type":"(val: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s605","typeKind":8,"type":"Observable"},{"sig":"take(howMany: number): Observable<T>","name":"take","parameters":[{"sig":"howMany: number","name":"howMany","kind":9,"href":"#s611","typeKind":32,"type":"number"}],"kind":11,"flags":4,"href":"index--Observable.html#s610","typeKind":8,"type":"Observable"},{"sig":"takeWhile(fn: (val: T) => boolean): Observable<T>","name":"takeWhile","parameters":[{"sig":"fn: (val: T) => boolean","name":"fn","kind":9,"href":"#s613","typeKind":17,"type":"(val: T) => boolean"}],"kind":11,"flags":4,"href":"index--Observable.html#s612","typeKind":8,"type":"Observable"},{"sig":"tap(tapFn: (val: T) => void): Observable<T>","name":"tap","parameters":[{"sig":"tapFn: (val: T) => void","name":"tapFn","kind":9,"href":"#s617","typeKind":17,"type":"(val: T) => void"}],"kind":11,"flags":4,"href":"index--Observable.html#s616","typeKind":8,"type":"Observable"},{"sig":"then<E, R>(resolve: (val: P extends 'emit1' ? T : T | undefined) => R, reject?: (e: E) => R): Promise<R>","name":"then","parameters":[{"sig":"resolve: (val: P extends 'emit1' ? T : T | undefined) => R","name":"resolve","kind":9,"href":"#s146","typeKind":17,"type":"(val: P extends 'emit1' ? T : T | undefined) => R"},{"sig":"reject?: (e: E) => R","name":"reject","kind":9,"flags":524288,"href":"#s149","typeKind":17,"type":"(e: E) => R"}],"kind":11,"flags":4,"href":"index--Observable.html#s143","typeKind":4,"type":"Promise"}]},{"sig":"Observable<T>","name":"Observable","kind":4,"flags":131073,"href":"index--Observable.html","children":[{"sig":"catchError<T2 extends T | never>(selector: (err: unknown, source: Observable<T>) => Observable<T2> | void): Observable<T>","name":"catchError","parameters":[{"sig":"selector: (err: unknown, source: Observable<T>) => Observable<T2> | void","name":"selector","kind":9,"href":"#s558","typeKind":17,"type":"(err: unknown, source: Observable<T>) => Observable<T2> | void"}],"kind":11,"flags":4,"href":"index--Observable.html#s556","typeKind":8,"type":"Observable"},{"sig":"debounceTime(time?: number, timer?: (delay: number) => Observable<void>): Observable<T>","name":"debounceTime","parameters":[{"sig":"time?: number","name":"time","kind":9,"flags":524288,"href":"#s563","typeKind":32,"type":"number"},{"sig":"timer?: (delay: number) => Observable<void>","name":"timer","kind":9,"flags":524288,"href":"#s564","typeKind":17,"type":"(delay: number) => Observable<void>"}],"kind":11,"flags":4,"href":"index--Observable.html#s562","typeKind":8,"type":"Observable"},{"sig":"distinctUntilChanged(): Observable<T>","name":"distinctUntilChanged","kind":11,"flags":4,"href":"index--Observable.html#s567","typeKind":8,"type":"Observable"},{"sig":"exhaustMap<T2>(project: (value: T) => Observable<T2>): Observable<T2>","name":"exhaustMap","parameters":[{"sig":"project: (value: T) => Observable<T2>","name":"project","kind":9,"href":"#s570","typeKind":17,"type":"(value: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s568","typeKind":8,"type":"Observable"},{"sig":"filter<T2>(fn: (val: T) => boolean): Observable<T2>","name":"filter","parameters":[{"sig":"fn: (val: T) => boolean","name":"fn","kind":9,"href":"#s575","typeKind":17,"type":"(val: T) => boolean"}],"kind":11,"flags":4,"href":"index--Observable.html#s573","typeKind":8,"type":"Observable"},{"sig":"finalize(fn: () => void): Observable<T>","name":"finalize","parameters":[{"sig":"fn: () => void","name":"fn","kind":9,"href":"#s579","typeKind":17,"type":"() => void"}],"kind":11,"flags":4,"href":"index--Observable.html#s578","typeKind":8,"type":"Observable"},{"sig":"first(): Observable<T>","name":"first","kind":11,"flags":4,"href":"index--Observable.html#s581","typeKind":8,"type":"Observable"},{"sig":"ignoreElements(): Observable<never>","name":"ignoreElements","kind":11,"flags":4,"href":"index--Observable.html#s620","typeKind":8,"type":"Observable"},{"sig":"map<T2>(mapFn: (val: T) => T2): Observable<T2>","name":"map","parameters":[{"sig":"mapFn: (val: T) => T2","name":"mapFn","kind":9,"href":"#s584","typeKind":17,"type":"(val: T) => T2"}],"kind":11,"flags":4,"href":"index--Observable.html#s582","typeKind":8,"type":"Observable"},{"sig":"mergeMap<T2>(project: (val: T) => Observable<T2>): Observable<T2>","name":"mergeMap","parameters":[{"sig":"project: (val: T) => Observable<T2>","name":"project","kind":9,"href":"#s589","typeKind":17,"type":"(val: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s587","typeKind":8,"type":"Observable"},{"sig":"publishLast(): Observable<T>","name":"publishLast","kind":11,"flags":4,"href":"index--Observable.html#s592","typeKind":8,"type":"Observable"},{"sig":"reduce<T2>(reduceFn: (acc: T2, val: T, i: number) => T2, seed: T2): Observable<T2>","name":"reduce","parameters":[{"sig":"reduceFn: (acc: T2, val: T, i: number) => T2","name":"reduceFn","kind":9,"href":"#s595","typeKind":17,"type":"(acc: T2, val: T, i: number) => T2"},{"sig":"seed: T2","name":"seed","kind":9,"href":"#s600","typeKind":3,"type":"T2"}],"kind":11,"flags":4,"href":"index--Observable.html#s593","typeKind":8,"type":"Observable"},{"sig":"select<K extends keyof T>(key: K): Observable<T[K]>","name":"select","parameters":[{"sig":"key: K","name":"key","kind":9,"href":"#s603","typeKind":3,"type":"K"}],"kind":11,"flags":4,"href":"index--Observable.html#s601","typeKind":8,"type":"Observable"},{"sig":"share(): Observable<T>","name":"share","kind":11,"flags":4,"href":"index--Observable.html#s604","typeKind":8,"type":"Observable"},{"sig":"switchMap<T2>(project: (val: T) => Observable<T2>): Observable<T2>","name":"switchMap","parameters":[{"sig":"project: (val: T) => Observable<T2>","name":"project","kind":9,"href":"#s607","typeKind":17,"type":"(val: T) => Observable<T2>"}],"kind":11,"flags":4,"href":"index--Observable.html#s605","typeKind":8,"type":"Observable"},{"sig":"take(howMany: number): Observable<T>","name":"take","parameters":[{"sig":"howMany: number","name":"howMany","kind":9,"href":"#s611","typeKind":32,"type":"number"}],"kind":11,"flags":4,"href":"index--Observable.html#s610","typeKind":8,"type":"Observable"},{"sig":"takeWhile(fn: (val: T) => boolean): Observable<T>","name":"takeWhile","parameters":[{"sig":"fn: (val: T) => boolean","name":"fn","kind":9,"href":"#s613","typeKind":17,"type":"(val: T) => boolean"}],"kind":11,"flags":4,"href":"index--Observable.html#s612","typeKind":8,"type":"Observable"},{"sig":"tap(tapFn: (val: T) => void): Observable<T>","name":"tap","parameters":[{"sig":"tapFn: (val: T) => void","name":"tapFn","kind":9,"href":"#s617","typeKind":17,"type":"(val: T) => void"}],"kind":11,"flags":4,"href":"index--Observable.html#s616","typeKind":8,"type":"Observable"}]},{"sig":"ObservableError = unknown","name":"ObservableError","kind":2,"href":"#s17","typeKind":43,"type":"unknown"},{"sig":"ObservableT<T> = T extends Observable<infer U extends U> ? U : never","name":"ObservableT","kind":2,"href":"#s45","typeKind":18,"type":"T extends Observable<infer U extends U> ? U : never","resolvedType":"T extends Observable<infer U extends U, &quot;none&quot;> ? U : never"},{"sig":"Observer<T>","name":"Observer","kind":4,"flags":1,"href":"index--Observer.html","children":[{"sig":"complete?: CompleteFunction","name":"complete","kind":10,"flags":524292,"href":"index--Observer.html#s64","typeKind":2,"type":"CompleteFunction"},{"sig":"error?: ErrorFunction","name":"error","kind":10,"flags":524292,"href":"index--Observer.html#s63","typeKind":2,"type":"ErrorFunction"},{"sig":"next?: NextFunction<T>","name":"next","kind":10,"flags":524292,"href":"index--Observer.html#s62","typeKind":2,"type":"NextFunction"}]},{"sig":"Operator<T, T2> = (observable: Observable<T>) => Observable<T2>","name":"Operator","kind":2,"flags":1,"href":"index--html#s53","typeKind":17,"type":{"sig":"(observable: Observable<T>) => Observable<T2>","name":"","parameters":[{"sig":"observable: Observable<T>","name":"observable","kind":9,"href":"#s57","typeKind":8,"type":"Observable<T>"}],"kind":17,"href":"#s56","typeKind":8,"type":"Observable"},"resolvedType":{"sig":"(observable: Observable<T, &quot;none&quot;>) => Observable<T2, &quot;none&quot;>","name":"","parameters":[{"sig":"observable: Observable<T, &quot;none&quot;>","name":"observable","kind":9,"href":"#s59","typeKind":6,"type":"Observable<T, &quot;none&quot;>"}],"kind":17,"href":"#s58","typeKind":6,"type":"Observable<T2, &quot;none&quot;>"}},{"sig":"OrderedSubject<T> extends Subject<T>","name":"OrderedSubject","kind":8,"flags":1,"docs":{"content":[{"value":"A subject that guarantees all subscribers receive the same values in the order they were emitted."}]},"href":"index--OrderedSubject.html","typeKind":33,"type":"extends Subject<T>","children":[{"sig":"emitting: boolean = false","name":"emitting","kind":10,"flags":12,"href":"index--OrderedSubject.html#s210","typeKind":32,"type":"boolean"},{"sig":"next(a: T): void","name":"next","parameters":[{"sig":"a: T","name":"a","kind":9,"href":"#s212","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--OrderedSubject.html#s211","typeKind":32,"type":"void"},{"sig":"queue: T[] = []","name":"queue","kind":10,"flags":12,"href":"index--OrderedSubject.html#s209","typeKind":15,"type":"T[]"}]},{"sig":"PickObservable<T> = { [P in keyof T]: T[P] extends Observable<unknown> ? ObservableT<T[P]> : never }","name":"PickObservable","kind":2,"href":"#s49","typeKind":40,"type":"{ [P in keyof T]: T[P] extends Observable<unknown> ? ObservableT<T[P]> : never }","resolvedType":"{ [P in keyof T]: T[P] extends Observable<unknown, &quot;none&quot;> ? ObservableT<T[P]> : never }"},{"sig":"Reference<T> extends Subject<T>","name":"Reference","kind":8,"flags":1,"docs":{"content":[{"value":"A Reference is a behavior subject that does not require an initial value."}]},"href":"index--Reference.html","typeKind":33,"type":"extends Subject<T>","children":[{"sig":"$value: T | typeof Undefined = Undefined","name":"$value","kind":10,"flags":20,"href":"index--Reference.html#s240","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"T: T","name":"T","kind":6,"href":"#s239","typeKind":3,"type":"T"},{"sig":"Undefined","name":"Undefined","kind":27}]}},{"sig":"hasValue(): boolean","name":"hasValue","kind":12,"flags":4,"href":"index--Reference.html#s241","typeKind":32,"type":"boolean"},{"sig":"next(val: T): void","name":"next","parameters":[{"sig":"val: T","name":"val","kind":9,"href":"#s246","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--Reference.html#s245","typeKind":32,"type":"void"},{"sig":"onSubscribe(subscription: Subscriber<T>): UnsubscribeFunction","name":"onSubscribe","parameters":[{"sig":"subscription: Subscriber<T>","name":"subscription","kind":9,"href":"#s244","typeKind":8,"type":"Subscriber<T>"}],"kind":11,"flags":20,"href":"index--Reference.html#s243","typeKind":2,"type":"UnsubscribeFunction"},{"sig":"value(): T","name":"value","kind":12,"flags":4,"href":"index--Reference.html#s242","typeKind":3,"type":"T"}]},{"sig":"RemoveEvent<K>","name":"RemoveEvent","kind":4,"flags":1,"href":"index--RemoveEvent.html","children":[{"sig":"key: K","name":"key","kind":10,"flags":4,"href":"index--RemoveEvent.html#s630","typeKind":3,"type":"K"},{"sig":"type: 'remove'","name":"type","kind":10,"flags":4,"href":"index--RemoveEvent.html#s629","typeKind":23,"type":"'remove'"}]},{"sig":"ReplaySubject<T, ErrorT> extends Subject<T, ErrorT>","name":"ReplaySubject","kind":8,"flags":1,"docs":{"content":[{"value":"A variant of Subject that \"replays\" or emits old values to new subscribers.\nIt buffers a set number of values and will emit those values immediately to any\nnew subscribers in addition to emitting new values to existing subscribers."}]},"href":"index--ReplaySubject.html","typeKind":33,"type":"extends Subject<T, ErrorT>","children":[{"sig":"buffer: T[] = []","name":"buffer","kind":10,"flags":12,"href":"index--ReplaySubject.html#s225","typeKind":15,"type":"T[]"},{"sig":"bufferSize: number = Infinity","name":"bufferSize","kind":10,"flags":68,"href":"index--ReplaySubject.html#s229","typeKind":32,"type":"number"},{"sig":"constructor(public bufferSize: number = Infinity): ReplaySubject<T, ErrorT>","name":"constructor","parameters":[{"sig":"bufferSize: number = Infinity","name":"bufferSize","kind":10,"flags":68,"href":"index--ReplaySubject.html#s229","typeKind":32,"type":"number"}],"kind":14,"href":"index--ReplaySubject.html#s228","typeKind":8,"type":"ReplaySubject"},{"sig":"error(val: ErrorT): void","name":"error","parameters":[{"sig":"val: ErrorT","name":"val","kind":9,"href":"#s234","typeKind":3,"type":"ErrorT"}],"kind":11,"flags":4,"href":"index--ReplaySubject.html#s233","typeKind":32,"type":"void"},{"sig":"hasError: boolean = false","name":"hasError","kind":10,"flags":12,"href":"index--ReplaySubject.html#s226","typeKind":32,"type":"boolean"},{"sig":"lastError?: ErrorT","name":"lastError","kind":10,"flags":524300,"href":"index--ReplaySubject.html#s227","typeKind":3,"type":"ErrorT"},{"sig":"next(val: T): void","name":"next","parameters":[{"sig":"val: T","name":"val","kind":9,"href":"#s236","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--ReplaySubject.html#s235","typeKind":32,"type":"void"},{"sig":"onSubscribe(subscriber: Subscriber<T>): () => boolean","name":"onSubscribe","parameters":[{"sig":"subscriber: Subscriber<T>","name":"subscriber","kind":9,"href":"#s231","typeKind":8,"type":"Subscriber<T>"}],"kind":11,"flags":20,"href":"index--ReplaySubject.html#s230","typeKind":17,"type":{"sig":"() => boolean","name":"","kind":17,"href":"#s232","typeKind":32,"type":"boolean"}}]},{"sig":"Subject<T, ErrorT> extends Observable<T>","name":"Subject","kind":8,"flags":1,"docs":{"content":[{"value":"A Subject is an Observable that allows values to be\nmulticasted to many Observers."}]},"href":"index--Subject.html","typeKind":33,"type":"extends Observable<T>","children":[{"sig":"complete(): void","name":"complete","kind":11,"flags":4,"href":"index--Subject.html#s206","typeKind":32,"type":"void"},{"sig":"constructor(): Subject<T, ErrorT>","name":"constructor","kind":14,"href":"index--Subject.html#s201","typeKind":8,"type":"Subject"},{"sig":"error(e: ErrorT): void","name":"error","parameters":[{"sig":"e: ErrorT","name":"e","kind":9,"href":"#s205","typeKind":3,"type":"ErrorT"}],"kind":11,"flags":4,"href":"index--Subject.html#s204","typeKind":32,"type":"void"},{"sig":"isStopped: boolean = false","name":"isStopped","kind":10,"flags":20,"href":"index--Subject.html#s200","typeKind":32,"type":"boolean"},{"sig":"next(a: T): void","name":"next","parameters":[{"sig":"a: T","name":"a","kind":9,"href":"#s203","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--Subject.html#s202","typeKind":32,"type":"void"},{"sig":"observers: Set<Subscriber<T>> = new Set<Subscriber<T>>()","name":"observers","kind":10,"flags":20,"href":"index--Subject.html#s197","typeKind":4,"type":"Set"},{"sig":"onSubscribe(subscriber: Subscriber<T>): UnsubscribeFunction","name":"onSubscribe","parameters":[{"sig":"subscriber: Subscriber<T>","name":"subscriber","kind":9,"href":"#s199","typeKind":8,"type":"Subscriber<T>"}],"kind":11,"flags":20,"href":"index--Subject.html#s198","typeKind":2,"type":"UnsubscribeFunction"}]},{"sig":"Subscribable<T>","name":"Subscribable","kind":4,"flags":1,"href":"index--Subscribable.html","children":[{"sig":"subscribe(observer: Observer<T>): Subscription","name":"subscribe","parameters":[{"sig":"observer: Observer<T>","name":"observer","kind":9,"href":"#s68","typeKind":4,"type":"Observer<T>"}],"kind":11,"flags":4,"href":"index--Subscribable.html#s67","typeKind":4,"type":"Subscription"}]},{"sig":"SubscribeFunction<T> = (subscription: Subscriber<T>) => UnsubscribeFunction | void | Promise<void>","name":"SubscribeFunction","kind":2,"href":"#s35","typeKind":17,"type":{"sig":"(subscription: Subscriber<T>) => UnsubscribeFunction | void | Promise<void>","name":"","parameters":[{"sig":"subscription: Subscriber<T>","name":"subscription","kind":9,"href":"#s38","typeKind":8,"type":"Subscriber<T>"}],"kind":17,"href":"#s37","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"Promise<void>: Promise","name":"Promise","kind":6,"href":"------node_modules--typescript--lib--lib--es5--d--Promise.html","typeKind":4,"type":"Promise"},{"sig":"UnsubscribeFunction: UnsubscribeFunction","name":"UnsubscribeFunction","kind":6,"href":"#s32","typeKind":2,"type":"UnsubscribeFunction"},{"sig":"void","name":"void","kind":32}]}},"resolvedType":{"sig":"(subscription: Subscriber<T>) => void | UnsubscribeFunction | Promise<void>","name":"","parameters":[{"sig":"subscription: Subscriber<T>","name":"subscription","kind":9,"href":"#s40","typeKind":6,"type":"Subscriber<T>"}],"kind":17,"href":"#s39","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"Promise<void>","name":"Promise","kind":6},{"sig":"UnsubscribeFunction","name":"UnsubscribeFunction","kind":6},{"sig":"void","name":"void","kind":32}]}}},{"sig":"Subscriber<T>","name":"Subscriber","kind":8,"flags":1,"href":"index--Subscriber.html","children":[{"sig":"closed: boolean = false","name":"closed","kind":10,"flags":4,"href":"index--Subscriber.html#s83","typeKind":32,"type":"boolean"},{"sig":"complete(): void","name":"complete","kind":11,"flags":4,"href":"index--Subscriber.html#s97","typeKind":32,"type":"void"},{"sig":"constructor(privateobserver: Observer<T>, subscribe?: SubscribeFunction<T>, fwd?: (subscriber: Subscription) => void): Subscriber<T>","name":"constructor","parameters":[{"sig":"observer: Observer<T>","name":"observer","kind":10,"flags":8,"href":"index--Subscriber.html#s85","typeKind":4,"type":"Observer<T>"},{"sig":"subscribe?: SubscribeFunction<T>","name":"subscribe","kind":9,"flags":524288,"href":"#s86","typeKind":2,"type":"SubscribeFunction<T>"},{"sig":"fwd?: (subscriber: Subscription) => void","name":"fwd","kind":9,"flags":524288,"href":"#s87","typeKind":17,"type":"(subscriber: Subscription) => void"}],"kind":14,"href":"index--Subscriber.html#s84","typeKind":8,"type":"Subscriber"},{"sig":"error(e: ObservableError): void","name":"error","parameters":[{"sig":"e: ObservableError","name":"e","kind":9,"href":"#s96","typeKind":2,"type":"ObservableError"}],"kind":11,"flags":4,"href":"index--Subscriber.html#s95","typeKind":32,"type":"void"},{"sig":"next(val: T): void","name":"next","parameters":[{"sig":"val: T","name":"val","kind":9,"href":"#s94","typeKind":3,"type":"T"}],"kind":11,"flags":4,"href":"index--Subscriber.html#s93","typeKind":32,"type":"void"},{"sig":"observer: Observer<T>","name":"observer","kind":10,"flags":8,"href":"index--Subscriber.html#s85","typeKind":4,"type":"Observer<T>"},{"sig":"onUnsubscribe: UnsubscribeFunction | void = undefined","name":"onUnsubscribe","kind":10,"flags":12,"href":"index--Subscriber.html#s80","typeKind":5,"type":{"sig":"","name":"","kind":5,"children":[{"sig":"UnsubscribeFunction: UnsubscribeFunction","name":"UnsubscribeFunction","kind":6,"href":"#s32","typeKind":2,"type":"UnsubscribeFunction"},{"sig":"void","name":"void","kind":32}]}},{"sig":"setTeardown(teardown: () => void): void","name":"setTeardown","parameters":[{"sig":"teardown: () => void","name":"teardown","kind":9,"href":"#s91","typeKind":17,"type":"() => void"}],"kind":11,"flags":4,"href":"index--Subscriber.html#s90","typeKind":32,"type":"void"},{"sig":"teardown?: () => void","name":"teardown","kind":10,"flags":524300,"href":"index--Subscriber.html#s81","typeKind":17,"type":{"sig":"() => void","name":"","kind":17,"href":"#s82","typeKind":32,"type":"void"}},{"sig":"unsubscribe(): void","name":"unsubscribe","kind":11,"flags":4,"href":"index--Subscriber.html#s98","typeKind":32,"type":"void"}]},{"sig":"Subscription","name":"Subscription","kind":4,"flags":1,"href":"index--Subscription.html","children":[{"sig":"unsubscribe(): void","name":"unsubscribe","kind":11,"flags":4,"href":"index--Subscription.html#s77","typeKind":32,"type":"void"}]},{"sig":"UnsubscribeFunction = () => void","name":"UnsubscribeFunction","kind":2,"href":"#s32","typeKind":17,"type":{"sig":"() => void","name":"","kind":17,"href":"#s33","typeKind":32,"type":"void"}}]}